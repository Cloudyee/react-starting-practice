{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\starting-project\\\\redux-project\\\\02-second-project\\\\src\\\\components\\\\Shop\\\\ProductItem.js\",\n  _s = $RefreshSig$();\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { cartActions } from '../store/cart-slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductItem = props => {\n  _s();\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const {\n    title,\n    price,\n    description,\n    id\n  } = props;\n  const addToCartHandler = () => {\n    //항목의 값을 직접 변경하면 안되기 때문에 상수를 생성 후 활용\n    const newTotalQuantity = cart.totalQuantity + 1;\n    const updatedItems = cart.items.slice();\n    const existingItem = updatedItems.find(item => item.id === id);\n    if (existingItem) {\n      const updatedItems = {\n        ...existingItem\n      };\n      updatedItems.quantity++;\n      updatedItems.totalPrice = updatedItems.totalPrice + price;\n      const existingItemIndex = updatedItems.findIndex(item => item.id === id);\n      updatedItems[existingItemIndex] = updatedItems;\n    } else {\n      updatedItems.push({\n        id: id,\n        price: price,\n        quantity: 1,\n        totalPrice: price,\n        name: title\n      });\n    }\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items: updatedItems\n    };\n    dispatch(cartActions.replaceCart(newCart));\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: [\"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCartHandler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductItem, \"ecWlw9hQmiN1BKXN3G5mczU/ZzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ProductItem;\nexport default ProductItem;\nvar _c;\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"names":["Card","classes","cartActions","useDispatch","useSelector","jsxDEV","_jsxDEV","ProductItem","props","_s","cart","state","dispatch","title","price","description","id","addToCartHandler","newTotalQuantity","totalQuantity","updatedItems","items","slice","existingItem","find","item","quantity","totalPrice","existingItemIndex","findIndex","push","name","newCart","replaceCart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","actions","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/project/starting-project/redux-project/02-second-project/src/components/Shop/ProductItem.js"],"sourcesContent":["import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nimport { cartActions } from '../store/cart-slice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ProductItem = (props) => {\n  const cart = useSelector((state)=>state.cart)\n  const dispatch = useDispatch();\n\n  const { title, price, description, id } = props;\n  \n  const addToCartHandler=()=>{\n    //항목의 값을 직접 변경하면 안되기 때문에 상수를 생성 후 활용\n    const newTotalQuantity = cart.totalQuantity+1;\n\n    const updatedItems = cart.items.slice();\n    const existingItem = updatedItems.find((item)=>item.id===id);\n    if(existingItem){\n      const updatedItems={...existingItem};\n      updatedItems.quantity++;\n      updatedItems.totalPrice=updatedItems.totalPrice+price;\n      const existingItemIndex = updatedItems.findIndex(\n        (item)=>item.id===id\n      );\n      updatedItems[existingItemIndex]=updatedItems;\n    }else{\n      updatedItems.push({\n        id: id,\n        price: price,\n        quantity: 1,\n        totalPrice: price,\n        name: title,\n      })\n    }\n\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items : updatedItems,\n    }\n\n    dispatch(cartActions.replaceCart(newCart));\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}