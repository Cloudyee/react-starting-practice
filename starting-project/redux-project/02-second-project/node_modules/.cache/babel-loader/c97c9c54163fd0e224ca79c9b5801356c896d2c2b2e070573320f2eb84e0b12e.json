{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\starting-project\\\\redux-project\\\\02-second-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { uiActions } from './components/store/ui-slice';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //state를 통해 현재 상태를 자동으로 수신\n  //컴포넌트에서 활용할 데이터를 반환\n  /*\n  index.js의 코드를 살펴보면 아래와 같이 reudcer를 정의\n    const store = configureStore({\n      reducer:{ui:uiSlice.reducer}\n  })\n  따라서, 위 reducer의 키값 ui를 활용하여 이에 접근해야한다.\n  */\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n\n  //장바구니에 변경이 일어날 때 마다 요청이 날아감\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending'\n      }));\n      const response = await fetch('https://react-practice-fd7f5-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failse.');\n      }\n      const responseData = await response.json();\n    };\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9QL1oCqHjlAlYeg2oKyo1JL3Rfs=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","useState","uiActions","Cart","Layout","Products","jsxDEV","_jsxDEV","App","_s","showCart","state","ui","cartIsVisible","dispatch","cart","sendCartData","showNotification","status","response","fetch","method","body","JSON","stringify","ok","Error","responseData","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/project/starting-project/redux-project/02-second-project/src/App.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { uiActions } from './components/store/ui-slice';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\n\nfunction App() {\n  //state를 통해 현재 상태를 자동으로 수신\n  //컴포넌트에서 활용할 데이터를 반환\n  /*\n  index.js의 코드를 살펴보면 아래와 같이 reudcer를 정의\n    const store = configureStore({\n      reducer:{ui:uiSlice.reducer}\n  })\n  따라서, 위 reducer의 키값 ui를 활용하여 이에 접근해야한다.\n  */\n  const showCart = useSelector(state=>state.ui.cartIsVisible);\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector(state=>state.cart);\n\n  //장바구니에 변경이 일어날 때 마다 요청이 날아감\n  useEffect(()=>{\n    const sendCartData= async()=>{\n      dispatch(uiActions.showNotification({\n        status:'pending'\n      }))\n      const response = await fetch('https://react-practice-fd7f5-default-rtdb.firebaseio.com/cart.json',\n      {\n        method:'PUT', \n        body:JSON.stringify(cart)\n      });\n      if(!response.ok){\n        throw new Error('Sending cart data failse.')\n      }\n      const responseData = await response.json();\n    };\n  },[cart]);\n\n  return (\n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,QAAQ,GAAGZ,WAAW,CAACa,KAAK,IAAEA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAE3D,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,IAAI,GAAGjB,WAAW,CAACa,KAAK,IAAEA,KAAK,CAACI,IAAI,CAAC;;EAE3C;EACAf,SAAS,CAAC,MAAI;IACZ,MAAMgB,YAAY,GAAE,MAAAA,CAAA,KAAS;MAC3BF,QAAQ,CAACZ,SAAS,CAACe,gBAAgB,CAAC;QAClCC,MAAM,EAAC;MACT,CAAC,CAAC,CAAC;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAoE,EACjG;QACEC,MAAM,EAAC,KAAK;QACZC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACT,IAAI;MAC1B,CAAC,CAAC;MACF,IAAG,CAACI,QAAQ,CAACM,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC5C,CAAC;EACH,CAAC,EAAC,CAACb,IAAI,CAAC,CAAC;EAET,oBACER,OAAA,CAACH,MAAM;IAAAyB,QAAA,GACJnB,QAAQ,iBAAIH,OAAA,CAACJ,IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrB1B,OAAA,CAACF,QAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb;AAACxB,EAAA,CAxCQD,GAAG;EAAA,QAUOV,WAAW,EAEXC,WAAW,EAEfD,WAAW;AAAA;AAAAoC,EAAA,GAdjB1B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}