{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\starting-project\\\\redux-project\\\\02-second-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, Fragment } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCartData, fetchCartData } from './components/store/cart-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  //state를 통해 현재 상태를 자동으로 수신\n  //컴포넌트에서 활용할 데이터를 반환\n\n  /*\n    index.js의 코드를 살펴보면 아래와 같이 reudcer를 정의\n      const store = configureStore({\n        reducer:{ui:uiSlice.reducer}\n    })\n    따라서, 위 reducer의 키값 ui를 활용하여 이에 접근해야한다.\n  */\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n\n  //처음 렌더링시 동작\n  useEffect(() => {\n    dispatch();\n  }, []);\n\n  //장바구니에 변경이 일어날 때 마다 요청이 날아감\n  useEffect(() => {\n    //처음 시작시 요청을 보내지 않음(카트 정보를 덮어씌우지 않기 위함)\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    //TODO: thunk에 대해 더 자세히 공부\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O9b8bYJxvqj64xnNehdPz6jilpg=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","Fragment","Cart","Layout","Products","Notification","sendCartData","fetchCartData","jsxDEV","_jsxDEV","isInitial","App","_s","showCart","state","ui","cartIsVisible","dispatch","cart","notification","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/project/starting-project/redux-project/02-second-project/src/App.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, Fragment } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCartData, fetchCartData } from './components/store/cart-actions';\n\nlet isInitial = true;\n\nfunction App() {\n  //state를 통해 현재 상태를 자동으로 수신\n  //컴포넌트에서 활용할 데이터를 반환\n\n  /*\n    index.js의 코드를 살펴보면 아래와 같이 reudcer를 정의\n      const store = configureStore({\n        reducer:{ui:uiSlice.reducer}\n    })\n    따라서, 위 reducer의 키값 ui를 활용하여 이에 접근해야한다.\n  */\n  const showCart = useSelector(state=>state.ui.cartIsVisible);\n  const dispatch = useDispatch();\n  const cart = useSelector(state=>state.cart);\n  const notification = useSelector(state=>state.ui.notification)\n  \n  //처음 렌더링시 동작\n  useEffect(()=>{\n    dispatch()\n  },[]);\n\n  //장바구니에 변경이 일어날 때 마다 요청이 날아감\n  useEffect(()=>{\n    //처음 시작시 요청을 보내지 않음(카트 정보를 덮어씌우지 않기 위함)\n    if(isInitial){\n      isInitial=false;\n      return;\n    }\n    //TODO: thunk에 대해 더 자세히 공부\n    dispatch(sendCartData(cart))\n  },[cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && <Notification \n        status = {notification.status}\n        title = {notification.title}\n        message = {notification.notification}\n      />}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,YAAY,EAAEC,aAAa,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,QAAQ,GAAGf,WAAW,CAACgB,KAAK,IAAEA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC3D,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAMmB,IAAI,GAAGpB,WAAW,CAACgB,KAAK,IAAEA,KAAK,CAACI,IAAI,CAAC;EAC3C,MAAMC,YAAY,GAAGrB,WAAW,CAACgB,KAAK,IAAEA,KAAK,CAACC,EAAE,CAACI,YAAY,CAAC;;EAE9D;EACAnB,SAAS,CAAC,MAAI;IACZiB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAC,EAAE,CAAC;;EAEL;EACAjB,SAAS,CAAC,MAAI;IACZ;IACA,IAAGU,SAAS,EAAC;MACXA,SAAS,GAAC,KAAK;MACf;IACF;IACA;IACAO,QAAQ,CAACX,YAAY,CAACY,IAAI,CAAC,CAAC;EAC9B,CAAC,EAAC,CAACA,IAAI,EAAED,QAAQ,CAAC,CAAC;EAEnB,oBACER,OAAA,CAACR,QAAQ;IAAAmB,QAAA,GACND,YAAY,iBAAIV,OAAA,CAACJ,YAAY;MAC5BgB,MAAM,EAAIF,YAAY,CAACE,MAAO;MAC9BC,KAAK,EAAIH,YAAY,CAACG,KAAM;MAC5BC,OAAO,EAAIJ,YAAY,CAACA;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFlB,OAAA,CAACN,MAAM;MAAAiB,QAAA,GACJP,QAAQ,iBAAIJ,OAAA,CAACP,IAAI;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBlB,OAAA,CAACL,QAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf;AAACf,EAAA,CA7CQD,GAAG;EAAA,QAWOb,WAAW,EACXC,WAAW,EACfD,WAAW,EACHA,WAAW;AAAA;AAAA8B,EAAA,GAdzBjB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}