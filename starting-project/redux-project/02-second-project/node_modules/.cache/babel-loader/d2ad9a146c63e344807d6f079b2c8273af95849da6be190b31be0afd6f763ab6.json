{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\starting-project\\\\redux-project\\\\02-second-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //state를 통해 현재 상태를 자동으로 수신\n  //컴포넌트에서 활용할 데이터를 반환\n  /*\n  index.js의 코드를 살펴보면 아래와 같이 reudcer를 정의\n    const store = configureStore({\n      reducer:{ui:uiSlice.reducer}\n  })\n  따라서, 위 reducer의 키값 ui를 활용하여 이에 접근해야한다.\n  */\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cyguXIB6b4v5/3KffvwM81NRrjk=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","Cart","Layout","Products","jsxDEV","_jsxDEV","App","_s","showCart","state","ui","cartIsVisible","cart","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/project/starting-project/redux-project/02-second-project/src/App.js"],"sourcesContent":["import { useSelector } from 'react-redux';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\n\nfunction App() {\n  //state를 통해 현재 상태를 자동으로 수신\n  //컴포넌트에서 활용할 데이터를 반환\n  /*\n  index.js의 코드를 살펴보면 아래와 같이 reudcer를 정의\n    const store = configureStore({\n      reducer:{ui:uiSlice.reducer}\n  })\n  따라서, 위 reducer의 키값 ui를 활용하여 이에 접근해야한다.\n  */\n  const showCart = useSelector(state=>state.ui.cartIsVisible);\n  const cart = useSelector(state=>state.cart);\n\n  return (\n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AAEzC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC3D,MAAMC,IAAI,GAAGZ,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACG,IAAI,CAAC;EAE3C,oBACEP,OAAA,CAACH,MAAM;IAAAW,QAAA,GACJL,QAAQ,iBAAIH,OAAA,CAACJ,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBZ,OAAA,CAACF,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb;AAACV,EAAA,CAnBQD,GAAG;EAAA,QAUON,WAAW,EACfA,WAAW;AAAA;AAAAkB,EAAA,GAXjBZ,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}