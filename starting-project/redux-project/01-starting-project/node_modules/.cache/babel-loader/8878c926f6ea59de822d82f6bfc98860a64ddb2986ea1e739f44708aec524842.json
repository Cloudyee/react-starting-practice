{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\n\n//식별자의 이름을 한번에 정의하고 이를 활용할 수 있다.\n//프로젝트가 커져 다양한 상태가 생기게 되면, 이러한 상태들을 한번에 복사해야하는 상황이 올 수 있다.\n//이러한 상황을 해결하기 위해 \n/*\r\n1. 아래와같이 설정하여 활용할 수 있다.\r\n2. 리듀서를 어려개의 리듀서로 나눌 수 있다.\r\n3. Redux toolkit이라는 써드 파티를 활용한다! => 해당 방법을 채택하여 활용한다!!!\r\n*/\nconst intialAuthenState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: intialAuthenState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","intialAuthenState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"sources":["C:/Users/USER/Desktop/project/starting-project/redux-project/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\n//식별자의 이름을 한번에 정의하고 이를 활용할 수 있다.\r\n//프로젝트가 커져 다양한 상태가 생기게 되면, 이러한 상태들을 한번에 복사해야하는 상황이 올 수 있다.\r\n//이러한 상황을 해결하기 위해 \r\n/*\r\n1. 아래와같이 설정하여 활용할 수 있다.\r\n2. 리듀서를 어려개의 리듀서로 나눌 수 있다.\r\n3. Redux toolkit이라는 써드 파티를 활용한다! => 해당 방법을 채택하여 활용한다!!!\r\n*/\r\nconst intialAuthenState = {\r\n    isAuthenticated : false\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name:'authentication',\r\n    initialState: intialAuthenState,\r\n    reducers:{\r\n        login(state){\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer:{counter:counterSlice.reducer, auth: authSlice.reducer}\r\n});\r\n\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAG;EACtBC,eAAe,EAAG;AACtB,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAC,gBAAgB;EACrBC,YAAY,EAAEJ,iBAAiB;EAC/BK,QAAQ,EAAC;IACLC,KAAKA,CAACC,KAAK,EAAC;MACRA,KAAK,CAACN,eAAe,GAAG,IAAI;IAChC,CAAC;IACDO,MAAMA,CAACD,KAAK,EAAC;MACTA,KAAK,CAACN,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EACzBW,OAAO,EAAC;IAACC,OAAO,EAACC,YAAY,CAACF,OAAO;IAAEG,IAAI,EAAEX,SAAS,CAACQ;EAAO;AAClE,CAAC,CAAC;AAGF,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGd,SAAS,CAACa,OAAO;AAC5C,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}