{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\n\n//식별자의 이름을 한번에 정의하고 이를 활용할 수 있다.\n//프로젝트가 커져 다양한 상태가 생기게 되면, 이러한 상태들을 한번에 복사해야하는 상황이 올 수 있다.\n//이러한 상황을 해결하기 위해 \n/*\r\n1. 아래와같이 설정하여 활용할 수 있다.\r\n2. 리듀서를 어려개의 리듀서로 나눌 수 있다.\r\n3. Redux toolkit이라는 써드 파티를 활용한다! => 해당 방법을 채택하여 활용한다!!!\r\n*/\nexport const INCREMENT = 'increment';\nconst intialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  //이를 사용하면 원래의 값을 변경시키지 않고도 손쉽게 이를 운용할 수 있다. \n  name: 'counter',\n  initialState: intialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","INCREMENT","intialState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer","counterActions","actions"],"sources":["C:/Users/USER/Desktop/project/starting-project/redux-project/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\n//식별자의 이름을 한번에 정의하고 이를 활용할 수 있다.\r\n//프로젝트가 커져 다양한 상태가 생기게 되면, 이러한 상태들을 한번에 복사해야하는 상황이 올 수 있다.\r\n//이러한 상황을 해결하기 위해 \r\n/*\r\n1. 아래와같이 설정하여 활용할 수 있다.\r\n2. 리듀서를 어려개의 리듀서로 나눌 수 있다.\r\n3. Redux toolkit이라는 써드 파티를 활용한다! => 해당 방법을 채택하여 활용한다!!!\r\n*/\r\nexport const INCREMENT = 'increment';\r\n\r\nconst intialState = {counter:0, showCounter:true};\r\nconst counterSlice = createSlice({ //이를 사용하면 원래의 값을 변경시키지 않고도 손쉽게 이를 운용할 수 있다. \r\n    name : 'counter',\r\n    initialState : intialState,\r\n    reducers : {\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state,action){\r\n            state.counter = state.counter+action.amount;\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:counterSlice.reducer\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAG,WAAW;AAEpC,MAAMC,WAAW,GAAG;EAACC,OAAO,EAAC,CAAC;EAAEC,WAAW,EAAC;AAAI,CAAC;AACjD,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAAE;EAC/BO,IAAI,EAAG,SAAS;EAChBC,YAAY,EAAGL,WAAW;EAC1BM,QAAQ,EAAG;IACPC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAACU,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAGF,MAAMY,KAAK,GAAGhB,cAAc,CAAC;EACzBiB,OAAO,EAACZ,YAAY,CAACY;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAAO;AAClD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}